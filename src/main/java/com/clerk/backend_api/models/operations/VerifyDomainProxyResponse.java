/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.clerk.backend_api.models.operations;

import com.clerk.backend_api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.net.http.HttpResponse;
import java.util.Optional;

public class VerifyDomainProxyResponse implements com.clerk.backend_api.utils.Response {

    /**
     * HTTP response content type for this operation
     */
    private String contentType;

    /**
     * HTTP response status code for this operation
     */
    private int statusCode;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    private HttpResponse<InputStream> rawResponse;

    /**
     * Health check information about a domain's proxy configuration validation attempt.
     */
    private Optional<? extends com.clerk.backend_api.models.components.ProxyCheck> proxyCheck;

    @JsonCreator
    public VerifyDomainProxyResponse(
            String contentType,
            int statusCode,
            HttpResponse<InputStream> rawResponse,
            Optional<? extends com.clerk.backend_api.models.components.ProxyCheck> proxyCheck) {
        Utils.checkNotNull(contentType, "contentType");
        Utils.checkNotNull(statusCode, "statusCode");
        Utils.checkNotNull(rawResponse, "rawResponse");
        Utils.checkNotNull(proxyCheck, "proxyCheck");
        this.contentType = contentType;
        this.statusCode = statusCode;
        this.rawResponse = rawResponse;
        this.proxyCheck = proxyCheck;
    }
    
    public VerifyDomainProxyResponse(
            String contentType,
            int statusCode,
            HttpResponse<InputStream> rawResponse) {
        this(contentType, statusCode, rawResponse, Optional.empty());
    }

    /**
     * HTTP response content type for this operation
     */
    @JsonIgnore
    public String contentType() {
        return contentType;
    }

    /**
     * HTTP response status code for this operation
     */
    @JsonIgnore
    public int statusCode() {
        return statusCode;
    }

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @JsonIgnore
    public HttpResponse<InputStream> rawResponse() {
        return rawResponse;
    }

    /**
     * Health check information about a domain's proxy configuration validation attempt.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<com.clerk.backend_api.models.components.ProxyCheck> proxyCheck() {
        return (Optional<com.clerk.backend_api.models.components.ProxyCheck>) proxyCheck;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * HTTP response content type for this operation
     */
    public VerifyDomainProxyResponse withContentType(String contentType) {
        Utils.checkNotNull(contentType, "contentType");
        this.contentType = contentType;
        return this;
    }

    /**
     * HTTP response status code for this operation
     */
    public VerifyDomainProxyResponse withStatusCode(int statusCode) {
        Utils.checkNotNull(statusCode, "statusCode");
        this.statusCode = statusCode;
        return this;
    }

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    public VerifyDomainProxyResponse withRawResponse(HttpResponse<InputStream> rawResponse) {
        Utils.checkNotNull(rawResponse, "rawResponse");
        this.rawResponse = rawResponse;
        return this;
    }

    /**
     * Health check information about a domain's proxy configuration validation attempt.
     */
    public VerifyDomainProxyResponse withProxyCheck(com.clerk.backend_api.models.components.ProxyCheck proxyCheck) {
        Utils.checkNotNull(proxyCheck, "proxyCheck");
        this.proxyCheck = Optional.ofNullable(proxyCheck);
        return this;
    }

    /**
     * Health check information about a domain's proxy configuration validation attempt.
     */
    public VerifyDomainProxyResponse withProxyCheck(Optional<? extends com.clerk.backend_api.models.components.ProxyCheck> proxyCheck) {
        Utils.checkNotNull(proxyCheck, "proxyCheck");
        this.proxyCheck = proxyCheck;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        VerifyDomainProxyResponse other = (VerifyDomainProxyResponse) o;
        return 
            java.util.Objects.deepEquals(this.contentType, other.contentType) &&
            java.util.Objects.deepEquals(this.statusCode, other.statusCode) &&
            java.util.Objects.deepEquals(this.rawResponse, other.rawResponse) &&
            java.util.Objects.deepEquals(this.proxyCheck, other.proxyCheck);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            contentType,
            statusCode,
            rawResponse,
            proxyCheck);
    }
    
    @Override
    public String toString() {
        return Utils.toString(VerifyDomainProxyResponse.class,
                "contentType", contentType,
                "statusCode", statusCode,
                "rawResponse", rawResponse,
                "proxyCheck", proxyCheck);
    }
    
    public final static class Builder {
 
        private String contentType;
 
        private Integer statusCode;
 
        private HttpResponse<InputStream> rawResponse;
 
        private Optional<? extends com.clerk.backend_api.models.components.ProxyCheck> proxyCheck = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * HTTP response content type for this operation
         */
        public Builder contentType(String contentType) {
            Utils.checkNotNull(contentType, "contentType");
            this.contentType = contentType;
            return this;
        }

        /**
         * HTTP response status code for this operation
         */
        public Builder statusCode(int statusCode) {
            Utils.checkNotNull(statusCode, "statusCode");
            this.statusCode = statusCode;
            return this;
        }

        /**
         * Raw HTTP response; suitable for custom response parsing
         */
        public Builder rawResponse(HttpResponse<InputStream> rawResponse) {
            Utils.checkNotNull(rawResponse, "rawResponse");
            this.rawResponse = rawResponse;
            return this;
        }

        /**
         * Health check information about a domain's proxy configuration validation attempt.
         */
        public Builder proxyCheck(com.clerk.backend_api.models.components.ProxyCheck proxyCheck) {
            Utils.checkNotNull(proxyCheck, "proxyCheck");
            this.proxyCheck = Optional.ofNullable(proxyCheck);
            return this;
        }

        /**
         * Health check information about a domain's proxy configuration validation attempt.
         */
        public Builder proxyCheck(Optional<? extends com.clerk.backend_api.models.components.ProxyCheck> proxyCheck) {
            Utils.checkNotNull(proxyCheck, "proxyCheck");
            this.proxyCheck = proxyCheck;
            return this;
        }
        
        public VerifyDomainProxyResponse build() {
            return new VerifyDomainProxyResponse(
                contentType,
                statusCode,
                rawResponse,
                proxyCheck);
        }
    }
}

