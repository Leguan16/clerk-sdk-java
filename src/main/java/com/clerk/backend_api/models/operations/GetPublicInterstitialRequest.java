/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.clerk.backend_api.models.operations;


import com.clerk.backend_api.utils.SpeakeasyMetadata;
import com.clerk.backend_api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;


public class GetPublicInterstitialRequest {

    /**
     * The Frontend API key of your instance
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=frontendApi")
    private Optional<String> frontendApi;

    /**
     * The publishable key of your instance
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=publishable_key")
    private Optional<String> publishableKey;

    @JsonCreator
    public GetPublicInterstitialRequest(
            Optional<String> frontendApi,
            Optional<String> publishableKey) {
        Utils.checkNotNull(frontendApi, "frontendApi");
        Utils.checkNotNull(publishableKey, "publishableKey");
        this.frontendApi = frontendApi;
        this.publishableKey = publishableKey;
    }
    
    public GetPublicInterstitialRequest() {
        this(Optional.empty(), Optional.empty());
    }

    /**
     * The Frontend API key of your instance
     */
    @JsonIgnore
    public Optional<String> frontendApi() {
        return frontendApi;
    }

    /**
     * The publishable key of your instance
     */
    @JsonIgnore
    public Optional<String> publishableKey() {
        return publishableKey;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The Frontend API key of your instance
     */
    public GetPublicInterstitialRequest withFrontendApi(String frontendApi) {
        Utils.checkNotNull(frontendApi, "frontendApi");
        this.frontendApi = Optional.ofNullable(frontendApi);
        return this;
    }

    /**
     * The Frontend API key of your instance
     */
    public GetPublicInterstitialRequest withFrontendApi(Optional<String> frontendApi) {
        Utils.checkNotNull(frontendApi, "frontendApi");
        this.frontendApi = frontendApi;
        return this;
    }

    /**
     * The publishable key of your instance
     */
    public GetPublicInterstitialRequest withPublishableKey(String publishableKey) {
        Utils.checkNotNull(publishableKey, "publishableKey");
        this.publishableKey = Optional.ofNullable(publishableKey);
        return this;
    }

    /**
     * The publishable key of your instance
     */
    public GetPublicInterstitialRequest withPublishableKey(Optional<String> publishableKey) {
        Utils.checkNotNull(publishableKey, "publishableKey");
        this.publishableKey = publishableKey;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetPublicInterstitialRequest other = (GetPublicInterstitialRequest) o;
        return 
            Objects.deepEquals(this.frontendApi, other.frontendApi) &&
            Objects.deepEquals(this.publishableKey, other.publishableKey);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            frontendApi,
            publishableKey);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetPublicInterstitialRequest.class,
                "frontendApi", frontendApi,
                "publishableKey", publishableKey);
    }
    
    public final static class Builder {
 
        private Optional<String> frontendApi = Optional.empty();
 
        private Optional<String> publishableKey = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The Frontend API key of your instance
         */
        public Builder frontendApi(String frontendApi) {
            Utils.checkNotNull(frontendApi, "frontendApi");
            this.frontendApi = Optional.ofNullable(frontendApi);
            return this;
        }

        /**
         * The Frontend API key of your instance
         */
        public Builder frontendApi(Optional<String> frontendApi) {
            Utils.checkNotNull(frontendApi, "frontendApi");
            this.frontendApi = frontendApi;
            return this;
        }

        /**
         * The publishable key of your instance
         */
        public Builder publishableKey(String publishableKey) {
            Utils.checkNotNull(publishableKey, "publishableKey");
            this.publishableKey = Optional.ofNullable(publishableKey);
            return this;
        }

        /**
         * The publishable key of your instance
         */
        public Builder publishableKey(Optional<String> publishableKey) {
            Utils.checkNotNull(publishableKey, "publishableKey");
            this.publishableKey = publishableKey;
            return this;
        }
        
        public GetPublicInterstitialRequest build() {
            return new GetPublicInterstitialRequest(
                frontendApi,
                publishableKey);
        }
    }
}

