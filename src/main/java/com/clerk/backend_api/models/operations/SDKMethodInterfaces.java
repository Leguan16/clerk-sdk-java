/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.clerk.backend_api.models.operations;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class SDKMethodInterfaces {

    public interface MethodCallGetPublicInterstitial {
        com.clerk.backend_api.models.operations.GetPublicInterstitialResponse getPublicInterstitial(
            Optional<? extends String> frontendApi,
            Optional<? extends String> publishableKey) throws Exception;
    }


    public interface MethodCallGetJWKS {
        com.clerk.backend_api.models.operations.GetJWKSResponse getJWKSDirect() throws Exception;
    }


    public interface MethodCallGetClientList {
        com.clerk.backend_api.models.operations.GetClientListResponse list(
            Optional<? extends Long> limit,
            Optional<? extends Long> offset) throws Exception;
    }


    public interface MethodCallVerifyClient {
        com.clerk.backend_api.models.operations.VerifyClientResponse verify(
            Optional<? extends com.clerk.backend_api.models.operations.VerifyClientRequestBody> request) throws Exception;
    }


    public interface MethodCallGetClient {
        com.clerk.backend_api.models.operations.GetClientResponse get(
            String clientId) throws Exception;
    }


    public interface MethodCallCreateEmailAddress {
        com.clerk.backend_api.models.operations.CreateEmailAddressResponse create(
            Optional<? extends com.clerk.backend_api.models.operations.CreateEmailAddressRequestBody> request) throws Exception;
    }


    public interface MethodCallGetEmailAddress {
        com.clerk.backend_api.models.operations.GetEmailAddressResponse get(
            String emailAddressId) throws Exception;
    }


    public interface MethodCallDeleteEmailAddress {
        com.clerk.backend_api.models.operations.DeleteEmailAddressResponse delete(
            String emailAddressId) throws Exception;
    }


    public interface MethodCallUpdateEmailAddress {
        com.clerk.backend_api.models.operations.UpdateEmailAddressResponse update(
            String emailAddressId,
            Optional<? extends com.clerk.backend_api.models.operations.UpdateEmailAddressRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallCreatePhoneNumber {
        com.clerk.backend_api.models.operations.CreatePhoneNumberResponse create(
            Optional<? extends com.clerk.backend_api.models.operations.CreatePhoneNumberRequestBody> request) throws Exception;
    }


    public interface MethodCallGetPhoneNumber {
        com.clerk.backend_api.models.operations.GetPhoneNumberResponse get(
            String phoneNumberId) throws Exception;
    }


    public interface MethodCallDeletePhoneNumber {
        com.clerk.backend_api.models.operations.DeletePhoneNumberResponse delete(
            String phoneNumberId) throws Exception;
    }


    public interface MethodCallUpdatePhoneNumber {
        com.clerk.backend_api.models.operations.UpdatePhoneNumberResponse update(
            String phoneNumberId,
            Optional<? extends com.clerk.backend_api.models.operations.UpdatePhoneNumberRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallGetSessionList {
        com.clerk.backend_api.models.operations.GetSessionListResponse list(
            com.clerk.backend_api.models.operations.GetSessionListRequest request) throws Exception;
    }


    public interface MethodCallGetSession {
        com.clerk.backend_api.models.operations.GetSessionResponse get(
            String sessionId) throws Exception;
    }


    public interface MethodCallRevokeSession {
        com.clerk.backend_api.models.operations.RevokeSessionResponse revoke(
            String sessionId) throws Exception;
    }


    public interface MethodCallVerifySession {
        com.clerk.backend_api.models.operations.VerifySessionResponse verify(
            String sessionId,
            Optional<? extends com.clerk.backend_api.models.operations.VerifySessionRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallCreateSessionTokenFromTemplate {
        com.clerk.backend_api.models.operations.CreateSessionTokenFromTemplateResponse createTokenFromTemplate(
            String sessionId,
            String templateName) throws Exception;
    }


    public interface MethodCallGetTemplateList {
        com.clerk.backend_api.models.operations.GetTemplateListResponse list(
            com.clerk.backend_api.models.operations.TemplateType templateType) throws Exception;
    }


    public interface MethodCallGetTemplate {
        com.clerk.backend_api.models.operations.GetTemplateResponse get(
            com.clerk.backend_api.models.operations.PathParamTemplateType templateType,
            String slug) throws Exception;
    }


    public interface MethodCallUpsertTemplate {
        com.clerk.backend_api.models.operations.UpsertTemplateResponse upsert(
            com.clerk.backend_api.models.operations.UpsertTemplatePathParamTemplateType templateType,
            String slug,
            Optional<? extends com.clerk.backend_api.models.operations.UpsertTemplateRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallRevertTemplate {
        com.clerk.backend_api.models.operations.RevertTemplateResponse revert(
            com.clerk.backend_api.models.operations.RevertTemplatePathParamTemplateType templateType,
            String slug) throws Exception;
    }


    public interface MethodCallPreviewTemplate {
        com.clerk.backend_api.models.operations.PreviewTemplateResponse preview(
            String templateType,
            String slug,
            Optional<? extends com.clerk.backend_api.models.operations.PreviewTemplateRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallToggleTemplateDelivery {
        com.clerk.backend_api.models.operations.ToggleTemplateDeliveryResponse toggleDelivery(
            com.clerk.backend_api.models.operations.ToggleTemplateDeliveryPathParamTemplateType templateType,
            String slug,
            Optional<? extends com.clerk.backend_api.models.operations.ToggleTemplateDeliveryRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallGetUserList {
        com.clerk.backend_api.models.operations.GetUserListResponse list(
            com.clerk.backend_api.models.operations.GetUserListRequest request) throws Exception;
    }


    public interface MethodCallCreateUser {
        com.clerk.backend_api.models.operations.CreateUserResponse create(
            com.clerk.backend_api.models.operations.CreateUserRequestBody request) throws Exception;
    }


    public interface MethodCallGetUsersCount {
        com.clerk.backend_api.models.operations.GetUsersCountResponse count(
            com.clerk.backend_api.models.operations.GetUsersCountRequest request) throws Exception;
    }


    public interface MethodCallGetUser {
        com.clerk.backend_api.models.operations.GetUserResponse get(
            String userId) throws Exception;
    }


    public interface MethodCallUpdateUser {
        com.clerk.backend_api.models.operations.UpdateUserResponse update(
            String userId,
            com.clerk.backend_api.models.operations.UpdateUserRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDeleteUser {
        com.clerk.backend_api.models.operations.DeleteUserResponse delete(
            String userId) throws Exception;
    }


    public interface MethodCallBanUser {
        com.clerk.backend_api.models.operations.BanUserResponse ban(
            String userId) throws Exception;
    }


    public interface MethodCallUnbanUser {
        com.clerk.backend_api.models.operations.UnbanUserResponse unban(
            String userId) throws Exception;
    }


    public interface MethodCallLockUser {
        com.clerk.backend_api.models.operations.LockUserResponse lock(
            String userId) throws Exception;
    }


    public interface MethodCallUnlockUser {
        com.clerk.backend_api.models.operations.UnlockUserResponse unlock(
            String userId) throws Exception;
    }


    public interface MethodCallSetUserProfileImage {
        com.clerk.backend_api.models.operations.SetUserProfileImageResponse setProfileImage(
            String userId,
            com.clerk.backend_api.models.operations.SetUserProfileImageRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDeleteUserProfileImage {
        com.clerk.backend_api.models.operations.DeleteUserProfileImageResponse deleteProfileImage(
            String userId) throws Exception;
    }


    public interface MethodCallUpdateUserMetadata {
        com.clerk.backend_api.models.operations.UpdateUserMetadataResponse updateMetadata(
            String userId,
            Optional<? extends com.clerk.backend_api.models.operations.UpdateUserMetadataRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallGetOAuthAccessToken {
        com.clerk.backend_api.models.operations.GetOAuthAccessTokenResponse getOAuthAccessToken(
            String userId,
            String provider) throws Exception;
    }


    public interface MethodCallUsersGetOrganizationMemberships {
        com.clerk.backend_api.models.operations.UsersGetOrganizationMembershipsResponse getOrganizationMemberships(
            String userId,
            Optional<? extends Long> limit,
            Optional<? extends Long> offset) throws Exception;
    }


    public interface MethodCallVerifyPassword {
        com.clerk.backend_api.models.operations.VerifyPasswordResponse verifyPassword(
            String userId,
            Optional<? extends com.clerk.backend_api.models.operations.VerifyPasswordRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallVerifyTOTP {
        com.clerk.backend_api.models.operations.VerifyTOTPResponse verifyTOTP(
            String userId,
            Optional<? extends com.clerk.backend_api.models.operations.VerifyTOTPRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallDisableMFA {
        com.clerk.backend_api.models.operations.DisableMFAResponse disableMFA(
            String userId) throws Exception;
    }


    public interface MethodCallCreateInvitation {
        com.clerk.backend_api.models.operations.CreateInvitationResponse create(
            Optional<? extends com.clerk.backend_api.models.operations.CreateInvitationRequestBody> request) throws Exception;
    }


    public interface MethodCallListInvitations {
        com.clerk.backend_api.models.operations.ListInvitationsResponse list(
            Optional<? extends Long> limit,
            Optional<? extends Long> offset,
            Optional<? extends com.clerk.backend_api.models.operations.QueryParamStatus> status) throws Exception;
    }


    public interface MethodCallRevokeInvitation {
        com.clerk.backend_api.models.operations.RevokeInvitationResponse revoke(
            String invitationId) throws Exception;
    }


    public interface MethodCallListAllowlistIdentifiers {
        com.clerk.backend_api.models.operations.ListAllowlistIdentifiersResponse listDirect() throws Exception;
    }


    public interface MethodCallCreateAllowlistIdentifier {
        com.clerk.backend_api.models.operations.CreateAllowlistIdentifierResponse create(
            Optional<? extends com.clerk.backend_api.models.operations.CreateAllowlistIdentifierRequestBody> request) throws Exception;
    }


    public interface MethodCallDeleteAllowlistIdentifier {
        com.clerk.backend_api.models.operations.DeleteAllowlistIdentifierResponse delete(
            String identifierId) throws Exception;
    }


    public interface MethodCallListBlocklistIdentifiers {
        com.clerk.backend_api.models.operations.ListBlocklistIdentifiersResponse listDirect() throws Exception;
    }


    public interface MethodCallCreateBlocklistIdentifier {
        com.clerk.backend_api.models.operations.CreateBlocklistIdentifierResponse create(
            Optional<? extends com.clerk.backend_api.models.operations.CreateBlocklistIdentifierRequestBody> request) throws Exception;
    }


    public interface MethodCallDeleteBlocklistIdentifier {
        com.clerk.backend_api.models.operations.DeleteBlocklistIdentifierResponse delete(
            String identifierId) throws Exception;
    }


    public interface MethodCallUpdateInstanceAuthConfig {
        com.clerk.backend_api.models.operations.UpdateInstanceAuthConfigResponse updateAuthConfig(
            Optional<? extends com.clerk.backend_api.models.operations.UpdateInstanceAuthConfigRequestBody> request) throws Exception;
    }


    public interface MethodCallUpdateProductionInstanceDomain {
        com.clerk.backend_api.models.operations.UpdateProductionInstanceDomainResponse updateProductionDomain(
            Optional<? extends com.clerk.backend_api.models.operations.UpdateProductionInstanceDomainRequestBody> request) throws Exception;
    }


    public interface MethodCallUpdateInstance {
        com.clerk.backend_api.models.operations.UpdateInstanceResponse update(
            Optional<? extends com.clerk.backend_api.models.operations.UpdateInstanceRequestBody> request) throws Exception;
    }


    public interface MethodCallUpdateInstanceRestrictions {
        com.clerk.backend_api.models.operations.UpdateInstanceRestrictionsResponse updateRestrictions(
            Optional<? extends com.clerk.backend_api.models.operations.UpdateInstanceRestrictionsRequestBody> request) throws Exception;
    }


    public interface MethodCallChangeProductionInstanceDomain {
        com.clerk.backend_api.models.operations.ChangeProductionInstanceDomainResponse changeProductionDomain(
            Optional<? extends com.clerk.backend_api.models.operations.ChangeProductionInstanceDomainRequestBody> request) throws Exception;
    }


    public interface MethodCallUpdateInstanceOrganizationSettings {
        com.clerk.backend_api.models.operations.UpdateInstanceOrganizationSettingsResponse updateOrganizationSettings(
            Optional<? extends com.clerk.backend_api.models.operations.UpdateInstanceOrganizationSettingsRequestBody> request) throws Exception;
    }


    public interface MethodCallCreateActorToken {
        com.clerk.backend_api.models.operations.CreateActorTokenResponse createToken(
            Optional<? extends com.clerk.backend_api.models.operations.CreateActorTokenRequestBody> request) throws Exception;
    }


    public interface MethodCallRevokeActorToken {
        com.clerk.backend_api.models.operations.RevokeActorTokenResponse revokeToken(
            String actorTokenId) throws Exception;
    }


    public interface MethodCallListDomains {
        com.clerk.backend_api.models.operations.ListDomainsResponse listDirect() throws Exception;
    }


    public interface MethodCallAddDomain {
        com.clerk.backend_api.models.operations.AddDomainResponse add(
            Optional<? extends com.clerk.backend_api.models.operations.AddDomainRequestBody> request) throws Exception;
    }


    public interface MethodCallDeleteDomain {
        com.clerk.backend_api.models.operations.DeleteDomainResponse delete(
            String domainId) throws Exception;
    }


    public interface MethodCallUpdateDomain {
        com.clerk.backend_api.models.operations.UpdateDomainResponse update(
            String domainId,
            com.clerk.backend_api.models.operations.UpdateDomainRequestBody requestBody) throws Exception;
    }


    public interface MethodCallCreateSvixApp {
        com.clerk.backend_api.models.operations.CreateSvixAppResponse createSvixAppDirect() throws Exception;
    }


    public interface MethodCallDeleteSvixApp {
        com.clerk.backend_api.models.operations.DeleteSvixAppResponse deleteSvixAppDirect() throws Exception;
    }


    public interface MethodCallGenerateSvixAuthURL {
        com.clerk.backend_api.models.operations.GenerateSvixAuthURLResponse generateSvixAuthURLDirect() throws Exception;
    }


    public interface MethodCallListJWTTemplates {
        com.clerk.backend_api.models.operations.ListJWTTemplatesResponse listDirect() throws Exception;
    }


    public interface MethodCallCreateJWTTemplate {
        com.clerk.backend_api.models.operations.CreateJWTTemplateResponse create(
            Optional<? extends com.clerk.backend_api.models.operations.CreateJWTTemplateRequestBody> request) throws Exception;
    }


    public interface MethodCallGetJWTTemplate {
        com.clerk.backend_api.models.operations.GetJWTTemplateResponse get(
            String templateId) throws Exception;
    }


    public interface MethodCallUpdateJWTTemplate {
        com.clerk.backend_api.models.operations.UpdateJWTTemplateResponse update(
            String templateId,
            Optional<? extends com.clerk.backend_api.models.operations.UpdateJWTTemplateRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallDeleteJWTTemplate {
        com.clerk.backend_api.models.operations.DeleteJWTTemplateResponse delete(
            String templateId) throws Exception;
    }


    public interface MethodCallListOrganizations {
        com.clerk.backend_api.models.operations.ListOrganizationsResponse list(
            com.clerk.backend_api.models.operations.ListOrganizationsRequest request) throws Exception;
    }


    public interface MethodCallCreateOrganization {
        com.clerk.backend_api.models.operations.CreateOrganizationResponse create(
            Optional<? extends com.clerk.backend_api.models.operations.CreateOrganizationRequestBody> request) throws Exception;
    }


    public interface MethodCallGetOrganization {
        com.clerk.backend_api.models.operations.GetOrganizationResponse get(
            String organizationId) throws Exception;
    }


    public interface MethodCallUpdateOrganization {
        com.clerk.backend_api.models.operations.UpdateOrganizationResponse update(
            String organizationId,
            com.clerk.backend_api.models.operations.UpdateOrganizationRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDeleteOrganization {
        com.clerk.backend_api.models.operations.DeleteOrganizationResponse delete(
            String organizationId) throws Exception;
    }


    public interface MethodCallMergeOrganizationMetadata {
        com.clerk.backend_api.models.operations.MergeOrganizationMetadataResponse mergeMetadata(
            String organizationId,
            com.clerk.backend_api.models.operations.MergeOrganizationMetadataRequestBody requestBody) throws Exception;
    }


    public interface MethodCallUploadOrganizationLogo {
        com.clerk.backend_api.models.operations.UploadOrganizationLogoResponse uploadLogo(
            String organizationId,
            Optional<? extends com.clerk.backend_api.models.operations.UploadOrganizationLogoRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallDeleteOrganizationLogo {
        com.clerk.backend_api.models.operations.DeleteOrganizationLogoResponse deleteLogo(
            String organizationId) throws Exception;
    }


    public interface MethodCallCreateOrganizationInvitation {
        com.clerk.backend_api.models.operations.CreateOrganizationInvitationResponse create(
            String organizationId,
            com.clerk.backend_api.models.operations.CreateOrganizationInvitationRequestBody requestBody) throws Exception;
    }


    public interface MethodCallListOrganizationInvitations {
        com.clerk.backend_api.models.operations.ListOrganizationInvitationsResponse list(
            String organizationId,
            Optional<? extends Long> limit,
            Optional<? extends Long> offset,
            Optional<? extends com.clerk.backend_api.models.operations.ListOrganizationInvitationsQueryParamStatus> status) throws Exception;
    }


    public interface MethodCallCreateOrganizationInvitationBulk {
        com.clerk.backend_api.models.operations.CreateOrganizationInvitationBulkResponse createBulk(
            String organizationId,
            java.util.List<com.clerk.backend_api.models.operations.RequestBody> requestBody) throws Exception;
    }


    public interface MethodCallListPendingOrganizationInvitations {
        com.clerk.backend_api.models.operations.ListPendingOrganizationInvitationsResponse listPending(
            String organizationId,
            Optional<? extends Long> limit,
            Optional<? extends Long> offset) throws Exception;
    }


    public interface MethodCallGetOrganizationInvitation {
        com.clerk.backend_api.models.operations.GetOrganizationInvitationResponse get(
            String organizationId,
            String invitationId) throws Exception;
    }


    public interface MethodCallRevokeOrganizationInvitation {
        com.clerk.backend_api.models.operations.RevokeOrganizationInvitationResponse revoke(
            String organizationId,
            String invitationId,
            com.clerk.backend_api.models.operations.RevokeOrganizationInvitationRequestBody requestBody) throws Exception;
    }


    public interface MethodCallCreateOrganizationMembership {
        com.clerk.backend_api.models.operations.CreateOrganizationMembershipResponse create(
            String organizationId,
            com.clerk.backend_api.models.operations.CreateOrganizationMembershipRequestBody requestBody) throws Exception;
    }


    public interface MethodCallListOrganizationMemberships {
        com.clerk.backend_api.models.operations.ListOrganizationMembershipsResponse list(
            String organizationId,
            Optional<? extends Long> limit,
            Optional<? extends Long> offset,
            Optional<? extends String> orderBy) throws Exception;
    }


    public interface MethodCallUpdateOrganizationMembership {
        com.clerk.backend_api.models.operations.UpdateOrganizationMembershipResponse update(
            String organizationId,
            String userId,
            com.clerk.backend_api.models.operations.UpdateOrganizationMembershipRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDeleteOrganizationMembership {
        com.clerk.backend_api.models.operations.DeleteOrganizationMembershipResponse delete(
            String organizationId,
            String userId) throws Exception;
    }


    public interface MethodCallUpdateOrganizationMembershipMetadata {
        com.clerk.backend_api.models.operations.UpdateOrganizationMembershipMetadataResponse updateMetadata(
            String organizationId,
            String userId,
            com.clerk.backend_api.models.operations.UpdateOrganizationMembershipMetadataRequestBody requestBody) throws Exception;
    }


    public interface MethodCallVerifyDomainProxy {
        com.clerk.backend_api.models.operations.VerifyDomainProxyResponse verifyDomain(
            Optional<? extends com.clerk.backend_api.models.operations.VerifyDomainProxyRequestBody> request) throws Exception;
    }


    public interface MethodCallListRedirectURLs {
        com.clerk.backend_api.models.operations.ListRedirectURLsResponse listDirect() throws Exception;
    }


    public interface MethodCallCreateRedirectURL {
        com.clerk.backend_api.models.operations.CreateRedirectURLResponse create(
            Optional<? extends com.clerk.backend_api.models.operations.CreateRedirectURLRequestBody> request) throws Exception;
    }


    public interface MethodCallGetRedirectURL {
        com.clerk.backend_api.models.operations.GetRedirectURLResponse get(
            String id) throws Exception;
    }


    public interface MethodCallDeleteRedirectURL {
        com.clerk.backend_api.models.operations.DeleteRedirectURLResponse delete(
            String id) throws Exception;
    }


    public interface MethodCallCreateSignInToken {
        com.clerk.backend_api.models.operations.CreateSignInTokenResponse create(
            Optional<? extends com.clerk.backend_api.models.operations.CreateSignInTokenRequestBody> request) throws Exception;
    }


    public interface MethodCallRevokeSignInToken {
        com.clerk.backend_api.models.operations.RevokeSignInTokenResponse revoke(
            String signInTokenId) throws Exception;
    }


    public interface MethodCallUpdateSignUp {
        com.clerk.backend_api.models.operations.UpdateSignUpResponse update(
            String id,
            Optional<? extends com.clerk.backend_api.models.operations.UpdateSignUpRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallListOAuthApplications {
        com.clerk.backend_api.models.operations.ListOAuthApplicationsResponse list(
            Optional<? extends Long> limit,
            Optional<? extends Long> offset) throws Exception;
    }


    public interface MethodCallCreateOAuthApplication {
        com.clerk.backend_api.models.operations.CreateOAuthApplicationResponse create(
            Optional<? extends com.clerk.backend_api.models.operations.CreateOAuthApplicationRequestBody> request) throws Exception;
    }


    public interface MethodCallGetOAuthApplication {
        com.clerk.backend_api.models.operations.GetOAuthApplicationResponse get(
            String oauthApplicationId) throws Exception;
    }


    public interface MethodCallUpdateOAuthApplication {
        com.clerk.backend_api.models.operations.UpdateOAuthApplicationResponse updateApplication(
            String oauthApplicationId,
            com.clerk.backend_api.models.operations.UpdateOAuthApplicationRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDeleteOAuthApplication {
        com.clerk.backend_api.models.operations.DeleteOAuthApplicationResponse delete(
            String oauthApplicationId) throws Exception;
    }


    public interface MethodCallRotateOAuthApplicationSecret {
        com.clerk.backend_api.models.operations.RotateOAuthApplicationSecretResponse rotateSecret(
            String oauthApplicationId) throws Exception;
    }


    public interface MethodCallListSAMLConnections {
        com.clerk.backend_api.models.operations.ListSAMLConnectionsResponse list(
            Optional<? extends Long> limit,
            Optional<? extends Long> offset) throws Exception;
    }


    public interface MethodCallCreateSAMLConnection {
        com.clerk.backend_api.models.operations.CreateSAMLConnectionResponse create(
            Optional<? extends com.clerk.backend_api.models.operations.CreateSAMLConnectionRequestBody> request) throws Exception;
    }


    public interface MethodCallGetSAMLConnection {
        com.clerk.backend_api.models.operations.GetSAMLConnectionResponse get(
            String samlConnectionId) throws Exception;
    }


    public interface MethodCallUpdateSAMLConnection {
        com.clerk.backend_api.models.operations.UpdateSAMLConnectionResponse update(
            String samlConnectionId,
            com.clerk.backend_api.models.operations.UpdateSAMLConnectionRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDeleteSAMLConnection {
        com.clerk.backend_api.models.operations.DeleteSAMLConnectionResponse delete(
            String samlConnectionId) throws Exception;
    }


    public interface MethodCallCreateTestingToken {
        com.clerk.backend_api.models.operations.CreateTestingTokenResponse createDirect() throws Exception;
    }

}
