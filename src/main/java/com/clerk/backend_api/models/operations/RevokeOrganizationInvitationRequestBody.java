/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.clerk.backend_api.models.operations;

import com.clerk.backend_api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;

public class RevokeOrganizationInvitationRequestBody {

    /**
     * The ID of the user that revokes the invitation.
     * Must be an administrator in the organization.
     */
    @JsonProperty("requesting_user_id")
    private String requestingUserId;

    @JsonCreator
    public RevokeOrganizationInvitationRequestBody(
            @JsonProperty("requesting_user_id") String requestingUserId) {
        Utils.checkNotNull(requestingUserId, "requestingUserId");
        this.requestingUserId = requestingUserId;
    }

    /**
     * The ID of the user that revokes the invitation.
     * Must be an administrator in the organization.
     */
    @JsonIgnore
    public String requestingUserId() {
        return requestingUserId;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The ID of the user that revokes the invitation.
     * Must be an administrator in the organization.
     */
    public RevokeOrganizationInvitationRequestBody withRequestingUserId(String requestingUserId) {
        Utils.checkNotNull(requestingUserId, "requestingUserId");
        this.requestingUserId = requestingUserId;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RevokeOrganizationInvitationRequestBody other = (RevokeOrganizationInvitationRequestBody) o;
        return 
            java.util.Objects.deepEquals(this.requestingUserId, other.requestingUserId);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            requestingUserId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(RevokeOrganizationInvitationRequestBody.class,
                "requestingUserId", requestingUserId);
    }
    
    public final static class Builder {
 
        private String requestingUserId;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The ID of the user that revokes the invitation.
         * Must be an administrator in the organization.
         */
        public Builder requestingUserId(String requestingUserId) {
            Utils.checkNotNull(requestingUserId, "requestingUserId");
            this.requestingUserId = requestingUserId;
            return this;
        }
        
        public RevokeOrganizationInvitationRequestBody build() {
            return new RevokeOrganizationInvitationRequestBody(
                requestingUserId);
        }
    }
}

