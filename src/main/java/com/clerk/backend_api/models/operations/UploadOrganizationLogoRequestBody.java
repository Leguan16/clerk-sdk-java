/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.clerk.backend_api.models.operations;

import com.clerk.backend_api.utils.SpeakeasyMetadata;
import com.clerk.backend_api.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;

public class UploadOrganizationLogoRequestBody {

    /**
     * The ID of the user that will be credited with the image upload.
     */
    @SpeakeasyMetadata("multipartForm:name=uploader_user_id")
    private String uploaderUserId;

    @SpeakeasyMetadata("multipartForm:file")
    private UploadOrganizationLogoFile file;

    @JsonCreator
    public UploadOrganizationLogoRequestBody(
            String uploaderUserId,
            UploadOrganizationLogoFile file) {
        Utils.checkNotNull(uploaderUserId, "uploaderUserId");
        Utils.checkNotNull(file, "file");
        this.uploaderUserId = uploaderUserId;
        this.file = file;
    }

    /**
     * The ID of the user that will be credited with the image upload.
     */
    @JsonIgnore
    public String uploaderUserId() {
        return uploaderUserId;
    }

    @JsonIgnore
    public UploadOrganizationLogoFile file() {
        return file;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The ID of the user that will be credited with the image upload.
     */
    public UploadOrganizationLogoRequestBody withUploaderUserId(String uploaderUserId) {
        Utils.checkNotNull(uploaderUserId, "uploaderUserId");
        this.uploaderUserId = uploaderUserId;
        return this;
    }

    public UploadOrganizationLogoRequestBody withFile(UploadOrganizationLogoFile file) {
        Utils.checkNotNull(file, "file");
        this.file = file;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UploadOrganizationLogoRequestBody other = (UploadOrganizationLogoRequestBody) o;
        return 
            java.util.Objects.deepEquals(this.uploaderUserId, other.uploaderUserId) &&
            java.util.Objects.deepEquals(this.file, other.file);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            uploaderUserId,
            file);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UploadOrganizationLogoRequestBody.class,
                "uploaderUserId", uploaderUserId,
                "file", file);
    }
    
    public final static class Builder {
 
        private String uploaderUserId;
 
        private UploadOrganizationLogoFile file;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The ID of the user that will be credited with the image upload.
         */
        public Builder uploaderUserId(String uploaderUserId) {
            Utils.checkNotNull(uploaderUserId, "uploaderUserId");
            this.uploaderUserId = uploaderUserId;
            return this;
        }

        public Builder file(UploadOrganizationLogoFile file) {
            Utils.checkNotNull(file, "file");
            this.file = file;
            return this;
        }
        
        public UploadOrganizationLogoRequestBody build() {
            return new UploadOrganizationLogoRequestBody(
                uploaderUserId,
                file);
        }
    }
}

